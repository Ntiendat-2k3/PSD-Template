@mixin size($width, $height: $width) {
     width: $width;
     height: $height;
}

@mixin absoluteCenter($direction: "left", $position: absolute) {
     position: $position;
     @if $direction == "left" {
          left: 50%;
          transform: translateX(-50%);
     }
     @if $direction == "top" {
          top: 50%;
          transform: translateY(-50%);
     }
     @if $direction == "both" {
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
     }
}

@mixin absoluteFull()
{
     position: absolute;
     top: 0;
     left: 0;
     width:  100%;
     height: 100%;
}

@mixin maxWidth($breakpoint)
{
     @media screen and (max-width: $breakpoint)
     {
          @content;
     }
}
@mixin minWidth($breakpoint)
{
     @media screen and (min-width: $breakpoint)
     {
          @content;
     }
}

@mixin flexbox($align-items: stretch, $justify-content: flex-start, $flex-direction: row, $wrap: nowrap)
{
     display: flex;
     align-items: $align-items;
     justify-content: $justify-content;
     flex-direction: $flex-direction;
     flex-wrap: $wrap;
}

//hidescroll
@mixin hideScroll()
{
     -ms-overflow-style: none;
     scrollbar-width: none;
     &::-webkit-scrollbar{display: none;}
}

@mixin textClamp($row: 1, $size: 100%)
{
     display: -webkit-box;
     -webkit-line-clamp: $row;
     -webkit-box-orient: vertical;
     overflow: hidden;
     text-overflow: ellipsis;
     word-break: break-word;
     width: $size;
     max-width: $size;
     white-space: pre-wrap;
}

@mixin hoverEffect($itemClass, $contentClass)
{
     #{$itemClass} {
          position: relative;
          z-index: 1;
          transition: transform .25s linear;
          #{$contentClass} {
               @include absoluteFull();
               opacity: 0;
               visibility: hidden;
               transition: .3s linear;
               background: linear-gradient(to bottom, rgba($primary-color, 0.8), rgba($second-color, 0.8));
               z-index: 2;
               @include flexbox(center, center, column);
          }
          &::after{   // lớp xanh phía sau
               content: "";
               @include absoluteFull();
               background-color: $third-color;
               transition: transform .25s linear;
               z-index: -1;
          }
          &:hover{
               transform: translate(-1rem, -1rem);
               #{$contentClass} {
                    opacity: 1;
                    visibility: visible;
               }
               &::after{
                    transform: translate(1rem, 1rem);
               }
          }
     }
}

@mixin touchSlider()
{
     &-list{
               grid-auto-columns: 80%;  // moi slide co width 80%
               grid-auto-flow: column;   // de nam tren cung 1 hang
               grid-template-columns: unset;
               row-gap: 2.4rem;

               padding: 1rem;
               overflow-x: auto;
               scroll-snap-type: x mandatory;
               scroll-snap-stop: always;
               @include hideScroll();
               //: Trên đt k có hover , hover = touch trên đt
          }
          &-item{
               scroll-snap-align: start;  // center, end
          }
}